<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jwt.seckill.dao.StockDao">

    <resultMap type="com.jwt.seckill.entity.Stock" id="StockMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="remain" column="remain" jdbcType="VARCHAR"/>
        <result property="sold" column="sold" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="StockMap">
        select id,
               title,
               price,
               remain,
               sold,
               description
        from seckill.stock
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="StockMap">
        select id,
               title,
               price,
               remain,
               sold,
               description
        from seckill.stock
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="StockMap">
        select
        id, title, price, remain, sold, description
        from seckill.stock
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="remain != null">
                and remain = #{remain}
            </if>
            <if test="sold != null">
                and sold = #{sold}
            </if>
            <if test="description != null and description != ''">
                and description = #{description}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into seckill.stock(title, price, remain, sold, description)
        values (#{title}, #{price}, #{remain}, #{sold}, #{description})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into seckill.stock(title, price, remain, sold, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.price}, #{entity.remain}, #{entity.sold}, #{entity.description})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into seckill.stock(title, price, remain, sold, description)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.title}, #{entity.price}, #{entity.remain}, #{entity.sold}, #{entity.description})
        </foreach>
        on duplicate key update
        title = values(title) , price = values(price) , remain = values(remain) , sold = values(sold) , description =
        values(description)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update seckill.stock
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="remain != null">
                remain = #{remain},
            </if>
            <if test="sold != null">
                sold = #{sold},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from seckill.stock
        where id = #{id}
    </delete>

    <select id="selectRemain">
        select remain from stock where id = #{id}
    </select>

    <update id="soldStock">
        update seckill.stock
        set remain = remain - #{amount},
            sold = sold + #{amount}
        where id = #{id} and remain = #{remain}
    </update>

    <update id="soldStocks" keyProperty="id">
        <foreach collection="stocks" item="stock" separator=";">
            update seckill.stock
            set remain = remain - #{stock.sold},
            sold = sold + #{stock.sold}
            where id = #{stock.id} and remain >= #{stock.sold}
        </foreach>
    </update>

</mapper>

